---
# Source: keel/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keel
  namespace: default
  labels:
    app: keel
    chart: keel-0.9.11
    release: cd-keel
    heritage: Helm
---
# Source: keel/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cd-keel
  namespace: default
  labels:
    app: keel
    chart: keel-0.9.11
    release: cd-keel
    heritage: Helm
type: Opaque
data:
---
# Source: keel/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keel
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
      - extensions
      - apps
      - batch
    resources:
      - pods
      - replicasets
      - replicationcontrollers
      - statefulsets
      - deployments
      - daemonsets
      - jobs
      - cronjobs
    verbs:
      - get
      - delete # required to delete pods during force upgrade of the same tag
      - watch
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods/portforward
    verbs:
      - get
      - create
      - update
---
# Source: keel/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keel
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keel
subjects:
  - kind: ServiceAccount
    name: keel
    namespace: default
---
# Source: keel/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cd-keel
  namespace: default
  labels:
    app: keel
    chart: keel-0.9.11
    release: cd-keel
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keel
      release: cd-keel
  template:
    metadata:
      labels:
        app: keel
        release: cd-keel
    spec:
      serviceAccountName: keel
      containers:
        - name: keel
          # Note that we use appVersion to get images tag.
          image: "keelhq/keel:0.16.1"
          imagePullPolicy: Always
          command: ["/bin/keel"]
          volumeMounts:
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            # Enable polling
            - name: POLL
              value: "true"
            # Enable/disable Helm provider
            - name: HELM_PROVIDER
              value: "true"
            - name: TILLER_NAMESPACE
              value: "kube-system"
            - name: TILLER_ADDRESS
              value: "tiller-deploy:44134"
            - name: NOTIFICATION_LEVEL
              value: "info"
          envFrom:
            - secretRef:
                name: cd-keel
          ports:
            - containerPort: 9300
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9300
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9300
            initialDelaySeconds: 30
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi